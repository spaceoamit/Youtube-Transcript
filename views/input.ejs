<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube Transcript Fetcher</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="container mx-auto p-4 flex flex-col md:flex-row gap-4">
        <div class="md:w-1/3 bg-white p-6 rounded-lg shadow-md">
            <h1 class="text-2xl font-bold mb-6 text-center text-gray-800">YouTube Transcript Fetcher</h1>
            <form id="transcriptForm" class="space-y-4">
                <div>
                    <label for="youtubeUrl" class="block text-sm font-medium text-gray-700">Enter YouTube URL:</label>
                    <input type="url" id="youtubeUrl" name="youtubeUrl" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                </div>
                <button type="submit" class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50">Fetch Transcript</button>
            </form>
        </div>
        <div class="md:w-2/3 bg-white p-6 rounded-lg shadow-md">
            <h2 class="text-lg font-semibold mb-2 text-gray-700">Transcript:</h2>
            <div id="progressBar" class="w-full bg-gray-200 rounded-full h-2.5 mb-4 hidden">
                <div class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
            </div>
            <div id="transcriptResult" class="h-96 overflow-y-auto">
                <p id="transcriptText" class="text-sm text-gray-600"></p>
            </div>
        </div>
    </div>
    <script>
        document.getElementById('transcriptForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const youtubeUrl = document.getElementById('youtubeUrl').value;
            const progressBar = document.getElementById('progressBar');
            const progressBarInner = progressBar.querySelector('div');
            const transcriptText = document.getElementById('transcriptText');

            progressBar.classList.remove('hidden');
            transcriptText.textContent = 'Fetching transcript...';

            try {
                const response = await fetch('/fetch-transcript', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `youtubeUrl=${encodeURIComponent(youtubeUrl)}`,
                });

                const reader = response.body.getReader();
                const decoder = new TextDecoder();
                let transcript = '';

                while (true) {
                    const { done, value } = await reader.read();
                    if (done) break;
                    
                    const chunk = decoder.decode(value, { stream: true });
                    transcript += chunk;
                    transcriptText.textContent = transcript;

                    // Update progress bar (assuming 100KB as average transcript size)
                    const progress = Math.min((transcript.length / 100000) * 100, 100);
                    progressBarInner.style.width = `${progress}%`;
                }

                progressBar.classList.add('hidden');
            } catch (error) {
                console.error('Error:', error);
                transcriptText.textContent = 'An error occurred while fetching the transcript.';
                progressBar.classList.add('hidden');
            }
        });
    </script>
</body>
</html>